{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/actions/post.actions.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/effects/post.effects.ts","./src/app/reducers/index.ts","./src/app/reducers/post.reducer.ts","./src/app/selectors/post.selectors.ts","./src/app/services/post.service.ts","./src/app/view/backend/backend-routing.module.ts","./src/app/view/backend/post.module.ts","./src/app/view/backend/post/post.component.ts","./src/app/view/backend/post/post.component.html","./src/app/view/frontend/common/layout/layout.component.ts","./src/app/view/frontend/common/layout/layout.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { createAction, props } from '@ngrx/store';\nimport{Post} from '../models/post'\nimport { Update } from '@ngrx/entity';\n\n\n//load post list\nexport const loadPosts = createAction(\n  '[Post List Component] Load Posts'\n);\n\nexport const loadPostsSuccess = createAction(\n  '[Post List Effect] Load Posts Success',\n  props<{ posts: any }>()\n);\n\nexport const loadPostsFailure = createAction(\n  '[Post List Effect] Load Posts Failure',\n  props<{ error: any }>()\n);\n\n//load single post\n//using selector\nexport const SecelectPost = createAction(\n  '[Current Post ID Component & Reducer] Select Single Posts',\n  props<{postId:number}>()\n);\n\n//insert post\nexport const insertPost = createAction(\n  '[insert post Component] Load Posts',\n  props<{ post: any }>()\n);\n\nexport const insertPostsSuccess = createAction(\n  '[isert post Effect] Load Posts Success',\n  props<{ post: any }>()\n);\n\nexport const insertPostsFailure = createAction(\n  '[insert post Effect] Load Posts Failure',\n  props<{ error: any }>()\n);\n\n\n//update post\nexport const updatePost = createAction(\n  '[update post Component] Load Posts',\n  props<{ post: any ;id:number}>()\n);\n\nexport const updatePostsSuccess = createAction(\n  '[update post Effect] update Post Success',\n  props<{ payload:Update<Post>}>()\n);\n\nexport const updatePostsFailure = createAction(\n  '[update post Effect] update Post Failure',\n  props<{ error: any }>()\n);\n\n//delete post\nexport const deletePost = createAction(\n  '[Delete post Component] Delete post',\n  props<{id:string}>()\n);\n\nexport const deletePostSuccess = createAction(\n'[Delete post Effect] Delete post Success',\nprops<{id:string}>()\n)\n\nexport const deletePostFaliure = createAction(\n  '[Delete post Effect] Delete post Failure',\n  props<{error:any}>()\n)\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router'\nimport { PostComponent } from './view/backend/post/post.component'\nimport { LayoutComponent } from '../app/view/frontend/common/layout/layout.component'\n\n// import { PostReducer } from './reducers/post.reducer';\n\n\nconst router: Routes = [\n  {\n    path: '',\n    component: LayoutComponent,\n    children: [\n      {\n        path: '',\n        loadChildren: () => import('./view/frontend/frontend.module').then(m => m.FrontendModule)\n      }\n    ]\n\n\n  },\n  {\n    path: 'edit/:uid',\n    component: PostComponent,\n    data: {\n      title: \"edit post\"\n    }\n  },\n  {\n    path: 'ngrx',\n    loadChildren: () => import('./view/backend/post.module').then(m => m.PostModule)\n  },\n\n]\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    RouterModule.forRoot(router),\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n})\nexport class AppComponent {\n  title = 'fesh';\n}\n","<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { StoreModule } from '@ngrx/store';\nimport { reducers, metaReducers } from './reducers';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { environment } from '../environments/environment';\nimport { EffectsModule } from '@ngrx/effects';\nimport { PostEffects } from './effects/post.effects';\n// import { PostComponent } from './post/post/post.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { HttpClientModule } from '@angular/common/http'\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\n\n// import {CommonModuleFront} from './view/frontend/common/common.module'\nimport {LayoutComponent} from './view/frontend/common/layout/layout.component'\nimport {HeaderComponent} from './view/frontend/common/header/header.component';\nimport{FooterComponent} from './view/frontend/common/footer/footer.component';\n// import{LayoutComponent}from './view/frontend/common/layout/layout.component';\nconst LAYOUT = [\n  LayoutComponent\n]\n\n\n//my modules\nimport { PostModule } from './view/backend/post.module';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    // HeaderComponent,\n    // FooterComponent,\n    // LayoutComponent\n    ...LAYOUT,\n  ],\n  imports: [\n    BrowserModule,\n    StoreModule.forRoot(reducers, {\n      metaReducers, \n      runtimeChecks: {\n        strictStateImmutability: true,\n        strictActionImmutability: true,\n      }\n    }),\n    !environment.production ? StoreDevtoolsModule.instrument() : [],\n    EffectsModule.forRoot([PostEffects]),\n    AppRoutingModule,\n    HttpClientModule,\n    NgbModule,\n    PostModule,\n    // CommonModuleFront,\n    BrowserAnimationsModule\n\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { PostService } from '../services/post.service';\nimport { EMPTY, of } from 'rxjs';\nimport { mergeMap, map, catchError, tap } from 'rxjs/operators'\nimport * as postAction from '../actions/post.actions'\n\n\n\n@Injectable()\nexport class PostEffects {\n  //Extra datastore for few moment\n  HoldInsert: any = undefined;\n  HoldUpdate: any = undefined;\n  HoldDelete:string = undefined;\n\n  loadPosts$ = createEffect(() => this.actions$.pipe(\n    ofType(postAction.loadPosts),\n    mergeMap(() => this.postService.getPosts()\n      .pipe(\n        map(posts => (postAction.loadPostsSuccess({ posts })),\n          catchError(error => of(postAction.loadPostsFailure({ error }))))\n      ))\n    ));\n\n\n  InsertPost$ = createEffect(() => this.actions$.pipe(\n    ofType(postAction.insertPost),\n    tap((action) => {\n      this.HoldInsert = action.post;\n    }),\n    mergeMap((action) => this.postService.insertPosts(action.post).pipe(\n      map((post:any, action) => {\n        \n        const x = {\n          \"id\":post.insertedId,\n          \"firstname\":this.HoldInsert.firstname,\n          \"lastname\":this.HoldInsert.lastname,\n        }\n        return postAction.insertPostsSuccess({ post: x })\n      }),\n      catchError(error => of(postAction.insertPostsFailure({ error }))),\n    )),\n  ));\n\n\n  UpdatePost$ = createEffect(() => this.actions$.pipe(\n    ofType(postAction.updatePost),\n    tap((action) => {\n      this.HoldUpdate = action;\n    }),\n    mergeMap((action) => this.postService.updatePost(action.id, action.post).pipe(\n      map((post) => {\n        return postAction.updatePostsSuccess({\n          payload: {\n            id: this.HoldUpdate.id,\n            changes: this.HoldUpdate.post\n          }\n        });\n      }),\n      catchError(error => of(postAction.updatePostsFailure({ error })))\n    ))\n  ));\n\n\n  DeletePost$ = createEffect(() => this.actions$.pipe(\n    ofType(postAction.deletePost),\n    tap((action)=>{\n      this.HoldDelete = action.id;\n    }),\n    mergeMap((action)=>this.postService.deltePost(action.id).pipe(\n      map((post)=>{\n        return postAction.deletePostSuccess({id:this.HoldDelete})\n      }),\n      catchError(error => of(postAction.deletePostFaliure({error})))\n    ))\n  ));\n\n  constructor(private actions$: Actions, private postService: PostService) { }\n\n}\n","import {\n  ActionReducer,\n  ActionReducerMap,\n  createFeatureSelector,\n  createSelector,\n  MetaReducer\n} from '@ngrx/store';\nimport { environment } from '../../environments/environment';\nimport {PostState,PostReducer} from \"./post.reducer\"\n\n\nexport interface MainState {\n post:PostState;\n\n}\n\nexport const reducers: ActionReducerMap<MainState> = {\n  post:PostReducer,\n\n};\n\n\nexport const metaReducers: MetaReducer<MainState>[] = !environment.production ? [] : [];\n","import { Action, createReducer, on, createFeatureSelector, createSelector, State } from '@ngrx/store';\nimport * as postAction from '../actions/post.actions'\nimport { EntityState, EntityAdapter, createEntityAdapter } from '@ngrx/entity';\nimport { Post } from \"../models/post\"\n\n\nexport const postFeatureKey = 'post';\n\n\n\n//created entity state( interface)\nexport interface PostState extends EntityState<Post> {\n  error: any;\n  currentSelectedPost: number;\n}\n\n//creating entity adapter(interface)\nexport const adapter: EntityAdapter<Post> = createEntityAdapter<Post>();\n\n//generating initial state using entity\nexport const initialState: PostState = adapter.getInitialState({\n  error: undefined,\n  currentSelectedPost: null,\n})\n\n//reducer which are setting value\nexport const PostReducer = createReducer(\n  initialState,\n\n  //for getting all data from database\n  on(postAction.loadPostsSuccess, (state, action) => {\n    return adapter.setAll(action.posts, state)\n  }),\n\n  //for insterting a single data into database and state\n  on(postAction.insertPostsSuccess, (state, action) => {\n    return adapter.addOne(action.post, state);\n  }),\n\n  //stting error if thair is any erro in insert\n  on(postAction.insertPostsFailure, (state, action) => ({\n    ...state,\n    error: action.error\n  })),\n\n  //setting id to  state\n  on(postAction.SecelectPost, (state, action) => {\n    return { ...state, currentSelectedPost: action.postId };\n  }),\n\n  //for update a single data into database and state\n  on(postAction.updatePostsSuccess, (state, action) => {\n    return adapter.updateOne(action.payload, state);\n  }),\n\n  //for successful delete data also delete from store\n  on(postAction.deletePostSuccess,(state,action)=>{\n    return adapter.removeOne(action.id,state)\n  }),\n\n  //for unsuccessful delete error will add to store\n  on(postAction.deletePostFaliure,(state,action)=>({\n    ...state,\n    error:action.error\n  }))\n);\n\n//getting and exporting state to access from another file\nexport const getSelectdPostId = (state:PostState) => { return state.currentSelectedPost};\n\n// for exporting this reducer to index reducer\nexport function reducer(state: PostState, action: Action) {\n  return PostReducer(state, action);\n}\n\nexport const {\n  selectIds,\n  selectEntities,\n  selectAll,\n  selectTotal } = adapter.getSelectors();\n\n","import { createFeatureSelector, createSelector, ActionReducerMap } from '@ngrx/store';\nimport * as formPost from \"../reducers/post.reducer\"\n\n//state interface\nexport interface State{\n  posts:formPost.PostState;\n}\n\n//reducre maybe\nexport const reducers:ActionReducerMap<State> = {\n  posts:formPost.reducer\n}\n\n//for seleceting feature selector\nexport const selectPostFeature = createFeatureSelector<formPost.PostState>(formPost.postFeatureKey);\n\n//selecting only entity or in other words actuals state\nexport const selectPostsEntities = createSelector(\n  selectPostFeature,\n  formPost => formPost.entities\n)\n\nexport const currentSinglePostId = createSelector(\n  selectPostFeature,\n  //coming from state method wich is exported\n  formPost.getSelectdPostId,\n)\n\nexport const singlePostBasedOnId = createSelector(\n  selectPostFeature,\n  currentSinglePostId,\n  (state,id)=>state.entities[id]\n)\n\nexport const Test = createSelector(\n  selectPostFeature,\n  formPost.selectIds,\n)\n\n//get state and  convert entity object to arry\nexport const TestAll = createSelector(\n  selectPostsEntities,\n  entities=>Object.keys(entities).map(k => entities[k])\n)\n\n//same as converting to arrat like upper function\nexport const selectPosts = createSelector(\n  selectPostFeature,\n  formPost.selectAll\n);\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http'\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostService {\n  api = \"https://ngrx-app.herokuapp.com\"\n  header:any = {\n    headers:{\n      \"Content-type\": \"application/json; charset=UTF-8\"\n    }\n  };\n  post:any = {}\n  constructor(private http:HttpClient) { }\n\n  getPosts(){\n    return this.http.get(this.api+'/user');\n  }\n\n  insertPosts(data){\n    return this.http.post(this.api+\"/create_user\",data,this.header)\n  }\n\n  updatePost(postId,postData){\n    return this.http.put(`${this.api}/edit_user/${postId}`,postData,this.header)\n  }\n\n  deltePost(postId){\n    return this.http.delete(`${this.api}/del_user/${postId}`);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { PostComponent } from './post/post.component'\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PostComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class BackendRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {BackendRoutingModule} from './backend-routing.module'\nimport {PostComponent} from './post/post.component'\n\n\n\n@NgModule({\n  declarations: [\n    PostComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    BackendRoutingModule\n  ]\n})\nexport class PostModule { }\n","import { Component, OnInit } from '@angular/core';\n\nimport { selectPosts, singlePostBasedOnId } from 'src/app/selectors/post.selectors'\nimport { MainState } from 'src/app/reducers';\nimport { Store, select } from \"@ngrx/store\"\nimport { Observable } from 'rxjs';\nimport * as PostAciton from 'src/app/actions/post.actions';\nimport { Post } from \"../../../models/post\"\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { ThrowStmt } from '@angular/compiler';\n\n@Component({\n  selector: 'app-post',\n  templateUrl: './post.component.html',\n  styleUrls: ['./post.component.css']\n})\n\n\nexport class PostComponent implements OnInit {\n  //for all data\n  data$: Observable<Post[]>;\n  totlalUser:number;\n\n  //handel singel data\n  uid: number;\n  firstname: string;\n  lastname: string;\n\n  //hold id for update\n  updatingId: number;\n\n  //for field validation\n  CreateUserForm: FormGroup;\n  formSubmitted = false;\n\n  //data lodd\n  loading = true;\n\n\n  constructor(\n    private store: Store<MainState>,\n    private formBuilder: FormBuilder\n  ) { }\n\n  ngOnInit(): void {\n    this.GetPostFromAPI();\n    this.FieldValidation();\n  }\n  noWhiteSpaceValidator(control:FormControl){\n    const isWhitespace = (control.value || '').trim().length === 0;\n    const isValid = !isWhitespace;\n    return isValid ? null : { 'whitespace': true };\n  }\n\n  FieldValidation() {\n    this.CreateUserForm = this.formBuilder.group({\n      firstnamex: [\n        null,\n        [\n          Validators.required,\n          Validators.minLength(2),\n          this.noWhiteSpaceValidator\n        ]\n      ],\n      LastNameValidated: [\n        null,\n        [ \n          Validators.required,\n          Validators.minLength(2),\n          this.noWhiteSpaceValidator\n        ]\n      ]\n    });\n  }\n\n  get formValAfterValidated() {\n    return this.CreateUserForm.controls\n  }\n\n  doSave() {\n\n    //validating formfields\n    this.formSubmitted = true;\n    if (this.CreateUserForm.invalid) {\n      console.log(this.CreateUserForm)\n    return;\n    }\n\n    //performing insert and update\n    this.updatingId === undefined ?\n      this.insert() :\n      this.update(this.updatingId);\n\n  }\n\n  clearaData() {\n    this.updatingId = undefined;\n    this.formSubmitted = false;\n    this.uid = undefined;\n    this.firstname = undefined;\n    this.lastname = undefined;\n  }\n\n  getData() {\n    return {\n      id: this.uid,\n      firstname: this.firstname,\n      lastname: this.lastname\n    }\n  }\n\n  setData(data) {\n    this.uid = data.id;\n    this.firstname = data.firstname;\n    this.lastname = data.lastname;\n  }\n\n  setTotal(total){\n    this.totlalUser = total;\n  }\n\n  GetPostFromAPI() {\n    // geting data form service unsing effct and dispatching aciton\n    this.store.dispatch(PostAciton.loadPosts());\n    this.data$ = this.store.pipe(select(selectPosts))\n    this.data$.subscribe(r=>{\n      this.loading = false;\n      this.setTotal(r.length);\n    })\n  }\n\n  insert() {\n    this.store.dispatch(PostAciton.insertPost({ post: this.getData() }));\n    this.store.pipe(select(selectPosts));\n    this.clearaData();\n  }\n\n  //when clicking on edit button setting id global to update  data after change\n  edit(id) {\n    this.updatingId = id\n\n    //setting data to state \n    this.store.dispatch(PostAciton.SecelectPost({ postId: id }))\n\n    //fetch data according to  id\n    this.store.pipe(select(singlePostBasedOnId)).subscribe(\n      //for not set data if action is compleated\n      r => this.updatingId ? this.setData(r) : \"\"\n    )\n  }\n\n  update(id) {\n    this.store.dispatch(PostAciton.updatePost({ id, post: this.getData() }));\n    this.clearaData();\n  }\n\n  deletePost(id) {\n    this.store.dispatch(PostAciton.deletePost({ id: id }))\n  }\n\n}\n","<div class=\"container-fluid py-4 header\">\n    <div class=\"row \">\n        <div class=\"col text-center\">\n            <h1 class=\"hidden-lg-down display-ngrx  text-light\">Angular and NGRX - 10</h1>\n            <h5 class=\"subtitle\">With node and mysql inside Docker Container</h5>\n        </div>\n    </div>\n</div>\n\n<a routerLink=\"/\" class=\" ml-3 mt-3 btn rounded btn-outline-primary contact\">Back to home</a>\n\n<div class=\"container mt-5\">\n    <div *ngIf=\"!updatingId\" class=\"action-ber-save rounded p-2\">\n        <h1>Create User</h1>\n    </div>\n    <div *ngIf=\"updatingId\" class=\"action-ber-update rounded p-2\">\n        <h1>Edit User</h1>\n    </div>\n    <div class=\"container border border-secondary rounded mt-3 p-3\">\n        <div class=\"row\">\n            <div class=\"col-12 col-md-5 border-seperator\">\n                <form [formGroup]=\"CreateUserForm\" (ngSubmit)=\"doSave()\">\n                    <div class=\"row\">\n                        <div class=\"col\">\n                            <div class=\"form-group\">\n                                <label for=\"title\">First Name</label>\n\n                                <input class=\"form-control\" type=\"text\" [(ngModel)]='firstname' name=\"title\" id=\"title\"\n                                    formControlName=\"firstnamex\"\n                                    [ngClass]=\" { 'is-invalid' : formSubmitted && formValAfterValidated.firstnamex.errors }\">\n\n                                <!-- Validation Error Message -->\n                                <div *ngIf=\"formSubmitted && formValAfterValidated.firstnamex.errors\">\n                                    <small *ngIf=\"formSubmitted && formValAfterValidated.firstnamex.errors.whitespace \"\n                                        class=\" mt-5 text-danger\">\n                                        First Name is Required\n                                    </small>\n                                    <small *ngIf=\"formSubmitted && formValAfterValidated.firstnamex.errors.minlength\"\n                                        class=\" mt-5 text-danger\">\n                                        First Name atleaset 2 or more charecters.\n                                    </small>\n                                </div>\n                                <!-- End of Validation Error Message -->\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col\">\n                            <div class=\"form-group\">\n                                <label class=\"\" for=\"body\">Last Name</label>\n                                <input class=\"form-control\" type=\"text\" [(ngModel)]='lastname' name=\"body\" id=\"body\"\n                                    formControlName=\"LastNameValidated\"\n                                    [ngClass]=\" { 'is-invalid' : formSubmitted && formValAfterValidated.LastNameValidated.errors }\">\n\n                                <!-- Validation Error Message -->\n                                <div *ngIf=\"formSubmitted && formValAfterValidated.LastNameValidated.errors\">\n                                    <small\n                                        *ngIf=\"formSubmitted && formValAfterValidated.LastNameValidated.errors.whitespace \"\n                                        class=\" mt-5 text-danger\">\n                                        Last Name is Required\n                                    </small>\n                                    <small\n                                        *ngIf=\"formSubmitted && formValAfterValidated.LastNameValidated.errors.minlength\"\n                                        class=\" mt-5 text-danger\">\n                                        Last Name atleaset 2 or more charecters.\n                                    </small>\n                                </div>\n                                <!-- End of Validation Error Message -->\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"row\">\n                        <div class=\"col\" *ngIf=\"!updatingId\">\n                            <button class=\"btn btn-success btn-sm px-md-5 w-50 w-sm-100\">Save</button>\n                        </div>\n\n                        <div *ngIf=\"updatingId\" class=\"col\">\n                            <button class=\"btn btn-warning btn-sm px-md-5\">Update</button>\n                        </div>\n                        <div *ngIf=\"updatingId\" class=\"col text-right\">\n                            <button (click)=\"clearaData()\" class=\"btn btn-primary btn-sm px-md-5\"> Goto insert\n                            </button>\n                        </div>\n                    </div>\n                </form>\n\n            </div>\n\n            <!-- Showing list of data in table -->\n            <div class=\"col-12 col-md-7 mt-4 mt-md-0\">\n                <div class=\"user-board w-100 \">\n\n                    <div *ngIf=\"loading\">\n                        <img class=\"img-fluid\" src=\"../../../../assets/images/loading.gif\" />\n                    </div>\n                    <div *ngIf=\"!loading\">\n                        <p class=\"lead text-white\">User Count</p>\n                        <h1 class=\"display-2 text-light\">{{totlalUser}}</h1>\n                    </div>\n                </div>\n            </div>\n            <!-- Showing list of data in table -->\n        </div>\n\n    </div>\n</div>\n\n<!-- table -->\n<div class=\"container mt-5\">\n    <div class=\"row\">\n        <div *ngIf=\"loading\" class=\"col\">\n            <img class=\"img-fluid\" src=\"../../../../assets/images/tableLoading.gif\" />\n        </div>\n        <div *ngIf=\"!loading\" class=\"col table-responsive-sm\">\n            <table class=\"table table-hover table-dark \">\n                <thead>\n                    <tr>\n                        <th scope=\"col\">#</th>\n                        <th scope=\"col\">First Name</th>\n                        <th scope=\"col\">Last Name</th>\n                        <th scope=\"col\" class=\"text-center\">Action</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\" let d  of (data$ | async);index as i\">\n                        <th scope=\"row\">{{i+1}}</th>\n                        <td>{{d.firstname}}</td>\n                        <td>{{d.lastname}}</td>\n                        <td class=\"text-center\">\n                            <button (click)=\"edit(d.id)\" class=\" px-3 btn btn-warning mr-md-4 btn-sm\">Edit</button>\n                            <button (click)=\"deletePost(d.id)\" class=\"btn btn-danger btn-sm\">Delete</button>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</div>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-layout',\n  templateUrl: './layout.component.html',\n  styleUrls: ['./layout.component.css']\n})\nexport class LayoutComponent {\n\n  constructor() { }\n\n  mailto(emailAddress: string, emailSubject: any) {\n    return \"mailto:\" + emailAddress + \"?subject=\" + emailSubject\n  }\n  \n  phone(){\n    return 'tel: +91 877 739 4986'\n  }\n}\n","<!-- <app-header></app-header> -->\n<!-- MENU BAR -->\n<nav class=\"navbar navbar-expand-lg\">\n  <div class=\"container\">\n    <a class=\"navbar-brand\" routerLink=\"/\">\n      <i class=\"fa fa-line-chart\"></i>\n      Digital Angle\n    </a>\n\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\"\n      aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n\n    <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n      <ul class=\"navbar-nav ml-auto\">\n        <li class=\"nav-item\">\n          <a href=\"\" routerLink=\"/\" class=\"nav-link smoothScroll\">Studio</a>\n        </li>\n        <li class=\"nav-item\">\n          <a href=\"\" routerLink=\"/ourwork\" class=\"nav-link smoothScroll\">Our Works</a>\n        </li>\n        <li class=\"nav-item\">\n          <a href=\"\" routerLink=\"/about\" class=\"nav-link smoothScroll\">About</a>\n        </li>\n        <li class=\"nav-item\">\n          <a href=\"\" routerLink=\"/feature\" class=\"nav-link\">Blog</a>\n        </li>\n        <li class=\"nav-item\">\n          <a href=\"\" routerLink=\"/ngrx\" class=\"nav-link contact\">NGRX-10 Demo</a>\n        </li>\n        <li class=\"nav-item\">\n          <a href=\"\" routerLink=\"/contact\" class=\"nav-link contact\">Contact</a>\n        </li>\n      </ul>\n    </div>\n  </div>\n</nav>\n\n<router-outlet></router-outlet>\n\n<!-- <app-footer></app-footer> -->\n\n\n\n<footer class=\"site-footer\">\n  <div class=\"container\">\n    <div class=\"row\">\n\n      <div class=\"col-lg-5 mx-lg-auto col-md-8 col-10\">\n        <h1 class=\"text-white\" data-aos=\"fade-up\" data-aos-delay=\"100\">We make creative <strong>Products</strong>.\n        </h1>\n      </div>\n\n      <div class=\"col-lg-3 col-md-6 col-12\" data-aos=\"fade-up\" data-aos-delay=\"200\">\n        <h4 class=\"my-4\">Contact Info</h4>\n\n        <p class=\"mb-1\">\n          <i class=\"fa fa-phone mr-2 footer-icon\"></i>\n          <a [href]=\"phone() \">+91 877 739 4986 </a>\n        </p>\n\n        <p>\n          <a href=\"#\">\n            <i class=\"fa fa-envelope mr-2 footer-icon\"></i>\n            <a [href]=\"mailto('example@mail.com', 'newSubject')\">psoumitra22@gamil.com</a>\n          </a>\n        </p>\n      </div>\n\n      <div class=\"col-lg-3 col-md-6 col-12\" data-aos=\"fade-up\" data-aos-delay=\"300\">\n        <h4 class=\"my-4\">Our Studio</h4>\n\n        <p class=\"mb-1\">\n          <i class=\"fa fa-home mr-2 footer-icon\"></i>\n          Sonarpur, kolkata - 700145 , WB, India\n        </p>\n      </div>\n\n      <div class=\"col-lg-4 mx-lg-auto text-center col-md-8 col-12\" data-aos=\"fade-up\" data-aos-delay=\"400\">\n        <p class=\"copyright-text\">Copyright &copy; 2020 Digitl Angle\n          <br>\n      </div>\n\n      <div class=\"col-lg-4 mx-lg-auto col-md-6 col-12\" data-aos=\"fade-up\" data-aos-delay=\"500\">\n\n        <ul class=\"footer-link\">\n          <li><a href=\"#\">Stories</a></li>\n          <li><a href=\"#\">Work with us</a></li>\n          <li><a href=\"#\">Privacy</a></li>\n        </ul>\n      </div>\n\n      <div class=\"col-lg-3 mx-lg-auto col-md-6 col-12\" data-aos=\"fade-up\" data-aos-delay=\"600\">\n        <ul class=\"social-icon\">\n          <li><a href=\"#\" class=\"fa fa-instagram\"></a></li>\n          <li><a href=\"#\" class=\"fa fa-twitter\"></a></li>\n          <li><a href=\"#\" class=\"fa fa-facebook\"></a></li>\n          <li><a href=\"#\" class=\"fa fa-linkedin\"></a></li>\n        </ul>\n      </div>\n\n    </div>\n  </div>\n</footer>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: true\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}